plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
}

repositories {
    mavenCentral()
}

group = 'com.sdm.admin'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    implementation {
        exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }
}

dependencies {
    implementation project(':core')
    implementation project(':storage')
    implementation project(':telenor')
    implementation project(':notification')
    implementation project(':payment')
    implementation project(':reporting')

    //Swagger
    implementation "io.springfox:springfox-boot-starter:3.0.0"

    //Google Api Client Library
    implementation 'com.google.api-client:google-api-client:1.32.1'

    //MFA
    implementation 'dev.samstevens.totp:totp-spring-boot-starter:1.7.1'

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    //Fake Data http://dius.github.io/java-faker/
    implementation 'com.github.javafaker:javafaker:1.0.2'

    //H2 DB
    implementation 'com.h2database:h2'

    //PostgreSQL
    implementation "org.postgresql:postgresql"

    //MySQL Runtime
    implementation "mysql:mysql-connector-java"

    //Hibernate Audit
    implementation 'org.hibernate:hibernate-envers'

    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.springframework.session:spring-session-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

bootRun{
    mainClass.set("com.sdm.AuthorizationServer")
}
